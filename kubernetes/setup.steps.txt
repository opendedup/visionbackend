gcloud config set project $GCP_PROJECT
gcloud config set compute/zone us-central1-a
export 
docker build -t flexiblevision/base -t flexiblevision/base:$(git rev-parse --short HEAD)  -f dockerimages/Docker.base .
docker push flexiblevision/base
docker build -t flexiblevision/pipeline-api -t flexiblevision/pipeline-api:$(git rev-parse --short HEAD)  -f dockerimages/Docker.pipeline.api .
docker push flexiblevision/pipeline-api
docker build -t flexiblevision/train -t flexiblevision/train:$(git rev-parse --short HEAD)  -f dockerimages/Docker.train.worker .
docker push flexiblevision/train
docker build -t flexiblevision/prep -t flexiblevision/prep:$(git rev-parse --short HEAD)  -f dockerimages/Docker.prep.worker .
docker push flexiblevision/prep
docker build  -t flexiblevision/capture -t flexiblevision/capture:$(git rev-parse --short HEAD)  -f dockerimages/Docker.capture .
docker push flexiblevision/capture
docker build -t flexiblevision/capture-pointgrey:latest -t flexiblevision/capture-pointgrey :$(git rev-parse --short HEAD)  -f dockerimages/Docker.pg.capture .
docker push flexiblevision/capture-pointgrey:latest
gcloud auth configure-docker
gcloud container clusters get-credentials standard-cluster-1
kubectl get namespaces
kubectl create -f https://k8s.io/examples/admin/namespace-dev.json
kubectl create -f https://k8s.io/examples/admin/namespace-prod.json
kubectl config view
kubectl config set-context dev --namespace=development --cluster=gke_$GCP_PROJECT_us-central1-a_standard-cluster-1 --user=gke_$GCP_PROJECT_us-central1-a_standard-cluster-1
kubectl config set-context prod --namespace=production --cluster=gke_$GCP_PROJECT_us-central1-a_standard-cluster-1 --user=gke_$GCP_PROJECT_us-central1-a_standard-cluster-1
kubectl config use-context prod
kubectl get deployment
kubectl get pods
#kubectl create clusterrolebinding cluster-admin-binding --clusterrole cluster-admin --user sam.silverberg@gmail.com
kubectl create -f ssd-storageclass.yaml
kubectl apply -f pipeline-api-secrets.yaml
kubectl apply -f minio-secrets.yaml
kubectl get secret minio-secret -o yaml
kubectl get secret pipeline-api-secrets -o yaml

kubectl delete -f kubernetes/pipeline-api.yaml
kubectl apply -f kubernetes/pipeline-api.yaml
kubectl delete -f kubernetes/prep.yaml
kubectl apply -f kubernetes/prep.yaml
kubectl delete -f kubernetes/train.yaml
kubectl apply -f kubernetes/train.yaml

kubectl set image deployment/tag-ui tag-ui=flexiblevision/tag-ui:0.4 --record
